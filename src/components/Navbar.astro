<style>
  #mobile-nav-view {
    transform: translateX(-100%); /* start all the way left */
  }

  .keep {
    display: grid !important;
  }

  .mobile-nav-items-selector-init {
    opacity: 0;
    transform: translateX(-35%);
    transition: 0.8s all cubic-bezier(0.22, 1, 0.36, 1);
  }

  .calc-top {
    padding-top: calc(50px + 5.25rem);
  }

  .hamburger-lines {
    position: relative;
    display: block;
  }
  .hamburger-lines::after {
    top: -7px;
    position: absolute;
    left: 0;
    content: '';
    transform-origin: 1.3px center;
    display: block;
    width: 1.25rem;
    height: 2px;
    transition: transform 0.1s ease-in-out;
  }

  .hamburger-lines::before {
    top: 7px;
    position: absolute;
    left: 0;
    content: '';
    transform-origin: 1.3px center;
    height: 2px;
    width: 1.25rem;
    transition: transform 0.1s ease-in-out;
  }

  .rotate .hamburger-lines {
    background-color: transparent;
  }

  .rotate .hamburger-lines::before {
    transform: rotate(-45deg);
    transform-origin: 50% 50%;
    top: 0px;
  }

  .rotate .hamburger-lines::after {
    transform: rotate(45deg);
    transform-origin: center;
    top: 0px;
  }

  .slide-lr-animation {
    animation: slide-lr 300ms cubic-bezier(0.87, 0, 0.13, 1);
    animation-play-state: running;
    animation-fill-mode: forwards;
  }

  .slide-rl-animation {
    animation: slide-rl 300ms cubic-bezier(0.87, 0, 0.13, 1);
    animation-play-state: running;
    animation-fill-mode: forwards;
  }
  .mobile-nav-items-show {
    opacity: 1;
    transform: translateX(0);
    transition:
      1.5s transform cubic-bezier(0.22, 1, 0.36, 1),
      1s opacity ease-in-out;
  }

  .mobile-nav-items-noshow {
    opacity: 0;
    transform: translateX(-35%);
    transition:
      1.5s transform cubic-bezier(0.22, 1, 0.36, 1),
      1s opacity ease-in-out;
  }

  /* start all the way left and move right */
  @keyframes slide-lr {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(0%);
    }
  }

  @keyframes slide-rl {
    0% {
      transform: translateX(0%);
    }

    100% {
      transform: translateX(-100%);
    }
  }
</style>

<nav
  class="gap-4 flex justify-start font-kai items-center xs:justify-between lt-xs:px-4 px-8 my-10 md:mb-16 max-w-3xl mx-auto"
>
  <a
    href="/"
    title="Home"
    class="hidden xs:block dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out">Home</a
  >
  <a
    href="/blog"
    title="Blog"
    class="hidden xs:block dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out">Blog</a
  >
  <a
    href="/projects"
    title="Projects"
    class="hidden xs:block dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out">Projects</a
  >
  <a
    href="https://github.com/maxdemaio"
    title="GitHub"
    class="transition-bg duration-200 ease-in-out text-lg grid items-center justify-center lt-sm:hidden w-10 h-10 bg-neutral-200 hover:bg-neutral-300 rounded dark:bg-neutral-800 dark:hover:bg-neutral-700"
  >
    <div class="i-carbon-logo-github"></div>
  </a>
  <a
    href="https://www.youtube.com/@maxwelldemaio"
    title="YouTube"
    class="transition-bg duration-200 ease-in-out text-lg grid items-center justify-center lt-sm:hidden w-10 h-10 bg-neutral-200 hover:bg-neutral-300 rounded dark:bg-neutral-800 dark:hover:bg-neutral-700"
  >
    <div class="i-carbon-logo-youtube"></div>
  </a>
  <button
    id="mobile-menu-button"
    class="z-50 xs:hidden w-10 h-10 grid items-center justify-center bg-neutral-200 dark:bg-neutral-800 rounded"
    type="button"
    aria-label="Open navigation"
    aria-controls="main-navigation"
    aria-expanded="false"
  >
    <!--match icon color with others (from layout)-->
    <span
      class="hamburger-lines w-5 h-[2px] bg-gray-700 dark:bg-gray-200 before:bg-gray-700 before:dark:bg-gray-200 after:bg-gray-700 after:dark:bg-gray-200"
    ></span>
  </button>
  <button
    title="Theme"
    id="theme-button"
    class="transition-bg duration-200 ease-in-out z-50 text-base grid items-center justify-center w-10 h-10 bg-neutral-200 hover:bg-neutral-300 rounded dark:bg-neutral-800 dark:hover:bg-neutral-700"
  >
    <div class="i-tabler-sun-filled dark:i-tabler-moon-stars"></div>
  </button>
</nav>

<div
  id="mobile-nav-view"
  class="font-kai calc-top h-[100%] w-[100%] text-3xl fixed z-40 inset-0 flex gap-12 flex-col items-center bg-white dark:text-gray-200 dark:bg-dark-bg px-8"
>
  <div id="mobile-nav-items-selector" class="mobile-nav-items-selector-init flex flex-col gap-12">
    <!--Note: after clicking, we should transition the mobile-nav-view away -->
    <a href="/" title="Home" class="dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out"
      >Home</a
    >
    <a
      href="/blog"
      title="Blog"
      class="dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out">Blog</a
    >
    <a
      href="/projects"
      title="Projects"
      class="dark:hover-text-white hover-text-black transition-color duration-200 ease-in-out">Projects</a
    >
  </div>
</div>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  const themeButton = document.getElementById('theme-button');

  if (themeButton) {
    themeButton.addEventListener('click', handleToggleClick);
  }
</script>

<script>
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileNavView = document.getElementById('mobile-nav-view');
  const mobileNavItems = document.getElementById('mobile-nav-items-selector');

  if (menuButton && mobileNavView && mobileNavItems) {
    menuButton.addEventListener('click', function () {
      if (menuButton.ariaExpanded === 'false') {
        // get rid of bug if you go into mobile, and then resize to desktop
        menuButton.classList.add('keep');
        mobileNavView.classList.remove('slide-rl-animation');
        mobileNavView.classList.add('slide-lr-animation');
        mobileNavItems.classList.remove('mobile-nav-items-noshow');
        mobileNavItems.classList.add('mobile-nav-items-show');
        menuButton.classList.add('rotate');
        menuButton.ariaExpanded = 'true';
        setTimeout(() => {
          document.body.style.overflow = 'hidden'; // prevent scrolling near end of animation
        }, 220);
      } else {
        menuButton.classList.remove('keep');
        mobileNavView.classList.remove('slide-lr-animation');
        mobileNavView.classList.add('slide-rl-animation');
        mobileNavItems.classList.remove('mobile-nav-items-show');
        mobileNavItems.classList.add('mobile-nav-items-noshow');
        document.body.style.overflow = 'auto'; // allow scrolling
        menuButton.classList.remove('rotate');
        menuButton.ariaExpanded = 'false';
      }
    });
  }
</script>
